@model AgentNetworkManager.Domain.ViewModels.AreaView


<div class="hundredPercent goMobileHundredPercent floatLeft noPrint">
    <div class="rowBody rowPadding borderAll Colour-White">
        <div class="text-Color"><h3>CREATE AGENT NETWORK LOCAL GOVERMENT AREA STRUCTURE </h3></div>

    </div>
</div>
<div class="hundredPercent goMobileHundredPercent floatLeft">
    <div class="rowBody rowPadding borderAll Colour-White">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
              
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.region, "Region", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.region, Model.AvailableRegion, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.State, "State", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.State, Model.AvailableState, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>

</div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {

        $("#region").change(function () {
            var selectedItem = $(this).val();
            var ddlStates = $("#State");
            var statesProgress = $("#loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetStateByRegionFilter"))",
                data: { "region": selectedItem },
                success: function (data) {
                    ddlStates.html('');
                    $.each(data, function (id, option) {
                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                    });
                    statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('FAIL TO RETRIVE RECORD.');
                    statesProgress.hide();
                }
            });
        });
    });
</script>



