@model RetailPlatform.Domain.ModelViews.RegisterAndAssignPlatformManagerToNetWork
@{
    ViewBag.Title = "Create";
}

<div class="hundredPercent goMobileHundredPercent floatLeft noPrint">
    <div class="rowBody rowPadding borderAll Colour-White">
        <div class="text-Color"><h3>USER PROFILE</h3></div>
        <div>create a user account and assign job role and function </div>
    </div>
</div>
<div class="hundredPercent goMobileHundredPercent floatLeft noPrint">
   @using (Html.BeginForm("AssignPlatformManagerToNetowrk", "UsersAdmin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
   {
    <div class="rowBody rowPadding borderAll filterBar Colour-White text-Gray">
        @Html.AntiForgeryToken()

        @Html.ValidationSummary("", new { @class = "text-error" })

        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MidleName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MidleName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, Model.AvailableSex, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ContactAddress, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ContactAddress, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            </div>
        </div>
       <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control"})
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">
                Select User Function/Role
            </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FunctionName, Model.AvailableFunction, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.FunctionName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">
                Select User Agent Network
            </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PlatformAndNetworkName, Model.AvailableNetwork, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PlatformAndNetworkName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Save" />
            </div>
        </div>

    </div>

   }

</div>



        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
