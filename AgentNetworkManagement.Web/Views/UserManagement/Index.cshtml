@model  PagedList.IPagedList<AgentNetworkManager.Domain.DbViews.Member>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}


<div class="hundredPercent goMobileHundredPercent floatLeft noPrint">
    <div class="rowBody rowPadding borderAll Colour-White">
        <div class="text-Color"><h3>USER PROFILE</h3></div>
        <div>This allows you to thoroughly manage all listed request(s) (View, Add, Edit and Delete). </div>
    </div>
</div>
<div class="hundredPercent goMobileHundredPercent floatLeft noPrint">
    @using (Html.BeginForm())
    {
        <div class="rowBody rowPadding borderAll filterBar Colour-White text-Gray">
            <span><h3 class="strong">@Model.Count()</h3></span><b>result(s)</b>
            <div class="divider"></div>

            <span class="noMobile">
                <b class="strong floatLeft">Search: </b>
                @Html.TextBox("searchString", null, null, new { @class = "normalHtmlTextField", placeholder = "Type Search Word..." })
            </span>
            <span><button class="dropShadow text-White goSearch noMobile" type="submit">GO</button></span>

        </div>
    }

</div>

<div class="hundredPercent goMobileHundredPercent floatLeft">
    <ul class="rowBody strips borderAll Colour-White underLine">
        <li class="clearFix noPrint">
            
            @if (User.IsInRole("Administrator"))
            {
                @Html.ActionLink("Register Platform/Administrator  ", "AssignPlatformManagerToNetowrk")
            }
            @if (!User.IsInRole("Administrator"))
            {
                @Html.ActionLink("Register User ", "AssignToNetwork")
            }
            
        </li>
        <li class="clearFix text-Black">
            <div class="table-responsive">
                <table class="table  table-striped table-condensed">
                    <tr>
                        <th>
                            @Html.DisplayName("User Information")
                        </th>
                        <th>
                            @Html.DisplayName("Agency")
                        </th>
                        <th>
                            @Html.DisplayName("Region")
                        </th>
                        <th>
                            @Html.DisplayName("State")
                        </th>
                        <th>
                            @Html.DisplayName("Area")
                        </th>
                        <th>
                            @Html.DisplayName("Zone")
                        </th>
                        <th>
                            @Html.DisplayName("Cluster")
                        </th>
                        <th>
                        </th>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div style="float: left; width: 15%">
                                    <img src="~/Avarter/_images/noPhoton.png" width="50" class="topProfileImg floatLeft Colour-Emerald"/>
                                </div>
                                <div style="float: left; width: 85%">
                                    @Html.DisplayFor(modelItem => item.Name)<br />
                                    <strong>@Html.Raw($"{item.Position}")</strong> <br />
                                    @Html.Raw($"{item.PhoneNumber}")<br />
                                    <strong>@Html.Raw($"{item.Email}")</strong>
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Agency)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RegionName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StateName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Zone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Clusta)
                            </td>
                            <td>
                                @if (item.Position.Equals("Regional Manager") && string.IsNullOrEmpty(item.RegionName))
                                {
                                @Html.ActionLink("Regional Manager", "AssignToRegionJuridiction", new { id = item.Id })

                                }
                                @if (item.Position.Equals("State Manager") && string.IsNullOrEmpty(item.StateName))
                                {
                                    @Html.ActionLink("State Manager", "AssignToStatejuridiction", new { id = item.Id })

                                }
                                @if (item.Position.Equals("Area Manager") && string.IsNullOrEmpty(item.Area))
                                {
                                    @Html.ActionLink("Area Manager", "AssignToAreajuridiction", new { id = item.Id })

                                }
                                @if (item.Position.Equals("Zonal Manager") && string.IsNullOrEmpty(item.Zone))
                                {
                                    @Html.ActionLink("Zonal Manager", "AssignToZonejuridiction", new { id = item.Id })

                                }
                                @if (item.Position.Equals("Field Agents") && string.IsNullOrEmpty(item.Clusta))
                                {
                                    @Html.ActionLink("Cluster Manager", "AssignToClusterjuridiction", new { id = item.Id })

                                }

                                @if (item.Position.Equals("Agent") && string.IsNullOrEmpty(item.Clusta))
                                {
                                    @Html.ActionLink("Agent", "AssignToClusterjuridiction", new { id = item.Id })

                                }


                            </td>
                        </tr>
                    }
                </table>

            </div>
        </li>

    </ul>
    @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index",
                       new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
</div>
